# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "app_python"
version = "0.1.0"
description = "Moscow time clock"
readme = "README.md"
authors = ["Daniil Manakovskiy <danman339@gmail.com>"]
repository = "https://github.com/WinnerOK/app_python"
homepage = "https://github.com/WinnerOK/app_python"


[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.68.0"
pytz = "^2021.1"
uvicorn = { extras = ["standard"], version = "^0.15.0" }
prometheus-fastapi-instrumentator = "^5.7.1"

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = { version = "^21.7b0", allow-prereleases = true }
darglint = "^1.8.0"
isort = { extras = ["colors"], version = "^5.9.3" }
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pre-commit = "^2.13.0"
pydocstyle = "^6.1.1"
pylint = "^2.9.6"
pytest = "^6.2.4"
pyupgrade = "^2.23.1"
safety = "^1.10.3"
pytest-freezegun = "^0.4.2"
mdformat-gfm = "^0.3.2"
pytest-cov = "^2.12.1"
pytest-mock = "^3.6.1"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.bandit]
exclude = ["test"]

[tool.pytest.ini_options]
addopts = """
  --cov=app_python
  --cov-fail-under=90
  --cov-report html
  """

[tool.coverage.run]
omit = [
  "tests/*",
  "**/__main__.py",
  "*site-packages*",
  #    Omit file with only creation logic
  "app_python/main.py",
  #    Omit file with config
  #    app_python/config.py
  #    Omit demonstration purpose endpoints
  "app_python/routers/utils.py"
]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 90
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "pass",
]
